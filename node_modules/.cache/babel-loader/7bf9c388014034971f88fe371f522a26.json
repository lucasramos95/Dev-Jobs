{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev Projetos\\\\ReactJS\\\\dev-jobs\\\\src\\\\ItemResult.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import { allJobs } from './data.js';\nconst ItemResult = _ref => {\n  let {\n    data,\n    addedFilters\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-item\",\n    children: data.map(job => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: job.logo,\n          alt: \"company logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"company\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"company-title\",\n                children: job.company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 33\n              }, this), job.new && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"company-new flags\",\n                children: \"novo!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 46\n              }, this), job.featured && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"company-featured flags\",\n                children: \"destaque\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"position\",\n              children: job.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"additional-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: job.postedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: job.contract\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: job.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filters\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-filter\",\n              value: job.role,\n              onClick: e => addedFilters(e.target.value),\n              children: job.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-filter\",\n              value: job.level,\n              onClick: e => addedFilters(e.target.value),\n              children: job.level\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), job.languages.map(language => {\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button-filter\",\n                value: language,\n                onClick: e => addedFilters(e.target.value),\n                children: language\n              }, language, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this);\n            }), job.tools.map(tool => {\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button-filter\",\n                value: tool,\n                onClick: e => addedFilters(e.target.value),\n                children: tool\n              }, tool, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ItemResult;\nexport default ItemResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemResult\");","map":{"version":3,"names":["ItemResult","data","addedFilters","map","job","logo","company","new","featured","position","postedAt","contract","location","role","e","target","value","level","languages","language","tools","tool","id"],"sources":["C:/Dev Projetos/ReactJS/dev-jobs/src/ItemResult.js"],"sourcesContent":["// import { allJobs } from './data.js';\r\n\r\nconst ItemResult = ({ data, addedFilters }) => {\r\n\r\n    return ( \r\n        <div className=\"results-item\">\r\n            { data.map((job) => {\r\n                return (\r\n                    <div className=\"job\" key={ job.id }>\r\n                        <img className=\"logo\" src={ job.logo } alt=\"company logo\"/>\r\n                        <div className=\"info-wrapper\">\r\n                        <div className=\"job-info\">\r\n                            <div className=\"company\">\r\n                                <span className=\"company-title\">{ job.company }</span>\r\n                                { job.new && <span className=\"company-new flags\">novo!</span> }\r\n                                { job.featured && <span className=\"company-featured flags\">destaque</span> }\r\n                            </div>\r\n                            <h3 className=\"position\">{ job.position }</h3>\r\n                            <div className=\"additional-info\">\r\n                                <span>{ job.postedAt }</span>\r\n                                <span>{ job.contract }</span>\r\n                                <span>{ job.location }</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"filters\">\r\n                            <button className=\"button-filter\" \r\n                                value={ job.role }\r\n                                onClick={(e) => addedFilters(e.target.value)}>\r\n                                    { job.role }\r\n                                </button>\r\n                            <button className=\"button-filter\" \r\n                                value={ job.level }\r\n                                onClick={(e) => addedFilters(e.target.value)}>\r\n                                    { job.level }\r\n                                </button>\r\n                            { job.languages.map(language => {\r\n                                return (\r\n                                    <button className=\"button-filter\" \r\n                                        key={ language } \r\n                                        value={ language }\r\n                                        onClick={(e) => addedFilters(e.target.value)}>\r\n                                            { language }\r\n                                    </button>\r\n                                )\r\n                            })     \r\n                            }\r\n                            { job.tools.map(tool => {\r\n                                return (\r\n                                    <button className=\"button-filter\" \r\n                                        key={ tool } \r\n                                        value={ tool }\r\n                                        onClick={(e) => addedFilters(e.target.value)}>\r\n                                            { tool }\r\n                                    </button>\r\n                                )\r\n                            })     \r\n                            }\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                )\r\n            }) }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ItemResult;"],"mappings":"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"},"metadata":{},"sourceType":"module"}